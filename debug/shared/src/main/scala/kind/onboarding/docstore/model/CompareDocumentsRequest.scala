/** Document Storage API API for storing, retrieving, updating, and deleting JSON documents.
  *
  * OpenAPI spec version: 1.1.0
  *
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator.
  *
  * https://openapi-generator.tech
  */

// this model was generated using model.mustache
package kind.onboarding.docstore.model
import scala.util.control.NonFatal

// see https://com-lihaoyi.github.io/upickle/
import upickle.default.{ReadWriter => RW, macroRW}
import upickle.default.*

case class CompareDocumentsRequest(
    /* The left JSON document */
    left: Option[String] = None,

    /* The right JSON document */
    right: Option[String] = None
) {

  def asJson: String = asData.asJson

  def asData: CompareDocumentsRequestData = {
    CompareDocumentsRequestData(
      left = left.getOrElse(""),
      right = right.getOrElse("")
    )
  }

}

object CompareDocumentsRequest {

  given RW[CompareDocumentsRequest] =
    CompareDocumentsRequestData.readWriter.bimap[CompareDocumentsRequest](_.asData, _.asModel)

  enum Fields(fieldName: String) extends Field(fieldName) {
    case left  extends Fields("left")
    case right extends Fields("right")
  }

}
