name: Publish to GitHub Packages

on:
  push:
    branches:
      - '*'  # or your default branch

jobs:
  generate-models:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Cache SBT
      uses: actions/cache@v2
      with:
        path: |
          ~/.sbt
          ~/.ivy2/cache
          ~/.cache/coursier
        key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
        restore-keys: |
          ${{ runner.os }}-sbt-

    - name: Set up working directory
      run: mkdir -p $GITHUB_WORKSPACE/target/schemas/docstore/target/global-logging

    - name: Generate openapi stubs
      run: |
        chmod +x ./genModels.sh
        source ./genModels.sh && generate

    - name: Change ownership of the target directory
      run: |
        echo "BEFORE:"
        ls -Alrth $GITHUB_WORKSPACE/target/schemas
        sudo chown -R $USER:$USER $GITHUB_WORKSPACE/target/schemas
        echo "AFTER:"
        ls -Alrth $GITHUB_WORKSPACE/target/schemas

    - name: Publish the stubs locally
      run: |
        chmod +x ./genModels.sh
        source ./genModels.sh && buildModels

    - name: Set up Maven settings
      run: |
        mkdir -p ~/.m2
        echo "<settings><servers><server><id>github</id><username>${{ github.actor }}</username><password>${{ secrets.GITHUB_TOKEN }}</password></server></servers></settings>" > ~/.m2/settings.xml


    - name: Build & Test Backend
      run: sbt "project appJVM" clean test
    - name: Publish to GitHub Packages
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: sbt publish
    - name: Get SBT version
      id: sbt_version
      run: echo "SBT_VERSION=$(sbt --no-colors 'show version' | tail -n 1 | awk '{print $2}')" >> $GITHUB_ENV

    - name: Set up Git user
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
    - name: Create Git tag
      run: git tag v${{ env.SBT_VERSION }}
    
    - name: Push tag
      run: git push origin v${{ env.SBT_VERSION }}
